// <auto-generated />
using System;
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Infrastructure.Data.Migrations
{
    [DbContext(typeof(TitsDbContext))]
    [Migration("20210418131705_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Models.Db.Account.WorkerAccount", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long?>("LastTokenSessionId")
                        .HasColumnType("bigint");

                    b.Property<string>("Login")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("LastTokenSessionId");

                    b.ToTable("WorkerAccounts");
                });

            modelBuilder.Entity("Models.Db.Account.WorkerAccountToRole", b =>
                {
                    b.Property<long>("WorkerRoleId")
                        .HasColumnType("bigint");

                    b.Property<long>("WorkerAccountId")
                        .HasColumnType("bigint");

                    b.HasKey("WorkerRoleId", "WorkerAccountId");

                    b.HasIndex("WorkerAccountId");

                    b.ToTable("WorkerAccountToRoles");
                });

            modelBuilder.Entity("Models.Db.Account.WorkerRole", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("TitleEn")
                        .HasColumnType("text");

                    b.Property<string>("TitleRu")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("WorkerRoles");
                });

            modelBuilder.Entity("Models.Db.Sessions.TokenSession", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Token")
                        .HasColumnType("text");

                    b.Property<long>("WorkerAccountId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("WorkerAccountId");

                    b.ToTable("TokenSessions");
                });

            modelBuilder.Entity("Models.Db.Account.WorkerAccount", b =>
                {
                    b.HasOne("Models.Db.Sessions.TokenSession", "LastTokenSession")
                        .WithMany()
                        .HasForeignKey("LastTokenSessionId");

                    b.Navigation("LastTokenSession");
                });

            modelBuilder.Entity("Models.Db.Account.WorkerAccountToRole", b =>
                {
                    b.HasOne("Models.Db.Account.WorkerAccount", "WorkerAccount")
                        .WithMany("WorkerRoles")
                        .HasForeignKey("WorkerAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Db.Account.WorkerRole", "WorkerRole")
                        .WithMany("Users")
                        .HasForeignKey("WorkerRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WorkerAccount");

                    b.Navigation("WorkerRole");
                });

            modelBuilder.Entity("Models.Db.Sessions.TokenSession", b =>
                {
                    b.HasOne("Models.Db.Account.WorkerAccount", "WorkerAccount")
                        .WithMany()
                        .HasForeignKey("WorkerAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WorkerAccount");
                });

            modelBuilder.Entity("Models.Db.Account.WorkerAccount", b =>
                {
                    b.Navigation("WorkerRoles");
                });

            modelBuilder.Entity("Models.Db.Account.WorkerRole", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
